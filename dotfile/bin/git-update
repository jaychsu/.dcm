#!/bin/sh

CURRENT_BRANCH=$(git branch | sed -n -e 's/^\* \(.*\)/\1/p')

for remote in origin upstream "$@"; do
  REMOTE_REF=`git remote | grep ${remote}`

  # Break current iteration if remote is missing
  if [[ ! -n $REMOTE_REF ]]; then
    [[ $remote != 'origin' && $remote != 'upstream' ]] && echo "Fatal: Command ignored! No remote named '${remote}'."
    continue
  fi

  # Fetch remote
  git fetch $remote
  echo "Fetched ${remote}."

  # Update local brach by corresponded one in remote
  if [[ $remote == 'origin' ]]; then
    branches=$(git branch | cut -c 3-)
    for branch in $branches; do
      git checkout $branch
      git pull --rebase $remote $branch
      echo "Pulled '${remote}/${branch}'."
    done
  fi

done

echo "Checkout to original branch: ${CURRENT_BRANCH}"
git checkout $CURRENT_BRANCH
